"""
Django settings for Hospital project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1sq)kvs*_-u3404p7+ay5#q-7jhj_%zqh((=n0&-3ta=e)0y-m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'sslserver',
    'ServerSide',
    'ClientSide',
    'secure_delete',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Hospital.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Hospital.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_AGE = 1800 #30 minutes
SESSION_RENEWAL_THRESHOLD = 300 #5 minutes
SESSION_COOKIE_HTTPONLY = True
SESSION_SAVE_EVERY_REQUEST = True

SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_SECONDS = 3600

SSLCERTIFICATE = 'Keys/cert.pem'
SSLKEY = 'Keys/key.pem'

MEDIA_ROOT = 'ServerSide/MedicalRecords/'

if os.name == "nt":  # Windows
    appdata_folder = os.environ["APPDATA"]
    folder_name = "safelife"
    KEYS_DIRECTORY = os.path.join(appdata_folder, folder_name)
elif os.name == "posix":  # Linux
    config_folder = os.path.expanduser("~/.config")
    folder_name = "safelife"
    KEYS_DIRECTORY = os.path.join(config_folder, folder_name)
else:
    print("Unsupported operating system.")
    exit(1)

SERVER_PUBLIC_KEY = 'ServerSide/Keys/public_key.pem'
PATIENT_PUBLIC_KEY = '/KEYS/PATIENT/PUBLIC_KEY'
PATIENT_PRIVATE_KEY = '/KEYS/PATIENT/PRIVATE_KEY'
DOCTOR_PUBLIC_KEY = '/KEYS/DOCTOR/PUBLIC_KEY'
DOCTOR_PRIVATE_KEY = '/KEYS/DOCTOR/PRIVATE_KEY'
LOGS = 'ServerSide/logs/'
AESKEY = 'ServerSide/Keys/aes_key.pem'

SECURE_DELETE = {
    'BACKEND': 'secure_delete.backends.database',
    'OPTIONS': {
        'PATTERN': 'random',
        'FIELDS': (),
        'ITERATIONS': 50,
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = ''
EMAIL_PORT = ''